class HDMagic_NewBook : HDWeapon {
	HDMagic_MagicController tracker;
	HDPlayerPawn ownr;
	int gRobustness;
	int gHeat;
	int gGravity;
	int gIncrementDecrement;
	int gPower;
	int gProjection;
	int gTime;
	int gImbue;
	

	default 
	{
		Scale 0.5;
		Inventory.PickupMessage "Picked up a book.";
		Inventory.Icon "STFEVL0";
		+INVENTORY.INVBAR;
		+INVENTORY.PERSISTENTPOWER;
		+INVENTORY.IGNORESKILL;
		+INVENTORY.UNDROPPABLE;
	}
	
	override void DoEffect() 
	{
		//Makes the book count mana instead of itself but only update every second
		self.tracker = HDMagic_MagicController(FindInventory("HDMagic_MagicController", false));
		if(level.time % 35 == 1) {
			amount = self.tracker.mana;
		}
		super.DoEffect();
	}
	action void a_cast() 
	{
		invoker.gRobustness = invoker.owner.countinv("HDMagic_GlyphRobustness");
		invoker.gHeat = invoker.owner.countinv("HDMagic_GlyphHeat");
		invoker.gGravity = invoker.owner.countinv("HDMagic_GlyphGravity");
		invoker.gIncrementDecrement = invoker.owner.countinv("HDMagic_GlyphIncrement") - invoker.owner.countinv("HDMagic_GlyphDecrement");
		invoker.gPower = invoker.owner.countinv("HDMagic_GlyphPower");
		invoker.gProjection = invoker.owner.countinv("HDMagic_GlyphProjection");
		invoker.gTime = invoker.owner.countinv("HDMagic_GlyphTime");
		invoker.gImbue = invoker.owner.countinv("HDMagic_GlyphImbue");
		string classname = string.format("HDMagic_Spell%i%i%i%i%i", invoker.gRobustness, invoker.gHeat, invoker.gGravity, invoker.gTime, invoker.gImbue);
		class<actor> classtype = classname;
	
	}
	States 
	{
	Ready:
		PUNG A 1 A_WeaponReady(WRF_ALL);
		Loop;
	Deselect:
		PUNG A 1 A_Lower;
		Loop;
	Select:
		PUNG A 1 A_Raise;
		Loop;
	Fire:
		TNT1 A 4 A_cast;
		Goto Ready;
	AltFire:
		PUNG B 2;
		TNT1 A 1 A_FirePlasma;
		PUNG C 2;
		Goto Ready;
	reload:
		PUNG B 5;
		TNT1 A 30 A_Heal;
		Goto Ready;
	zoom:
		TNT1 A 30 A_Feather;
		Goto Ready;
	}
	action void A_Heal()
	{
		if (player != null)
		{
			invoker.tracker = HDMagic_MagicController(FindInventory("HDMagic_MagicController", false));
			let ownr = HDPlayerPawn(invoker.owner);
			ownr.giveinventory("HDMagic_SpellHeal", 1);

		}
	}
	action void A_Feather()
	{
		invoker.tracker = HDMagic_MagicController(FindInventory("HDMagic_MagicController", false));
		let ownr = HDPlayerPawn(invoker.owner);
		ownr.giveinventory("HDMagic_SpellRegeneration", 1);
	}
	action void A_FirePlasma()
	{
		if (player == null)
		{
			return;
		}
		invoker.tracker = HDMagic_MagicController(FindInventory("HDMagic_MagicController", false));
		invoker.tracker.mana -= 20;
		for (int prjnum = 0; prjnum < 7; prjnum++) {
			ThunderBuster.ThunderZap(invoker.owner);
		}
	}
	
}
